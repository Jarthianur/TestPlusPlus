matrix:
  - name: C++11
    env:
      cpp_std: "11"
    tags:
      - c++11
  - name: C++14
    env:
      cpp_std: "14"
    tags:
      - c++14
  - name: C++17
    env:
      cpp_std: "17"
    tags:
      - c++17

model:
  variables:
    build_dir: build_{{ env.cpp_std }}
    linux:
      - target: test_seq
      - target: test_par
    osx:
      - target: test_seq
        cxx_args: "-Wno-unknown-warning-option"
      - target: test_par
        cxx_args: "-Xpreprocessor -fopenmp -lomp -Wno-unknown-warning-option"
  templates:
    linux:
      build_script: |
        pushd release
        ./build_header.sh
        popd
        mkdir -p $BUILD_DIR
        pushd $BUILD_DIR
        cmake -DCMAKE_CXX_STANDARD={{ env.cpp_std }} ..
        make -j2 {{ item.target }} rel_{{ item.target }}
        popd
      test_script: |
        pushd $BUILD_DIR
        $LCOV -d . -z
        $LCOV -c -i -d . -o base.info
        ./{{ item.target }} -coi '*'
        ./{{ item.target }} -oi '*' --xml test.xml
        ./{{ item.target }} -cosi '*' --md test.md
        ./{{ item.target }} -oi '*' --json test.json
        $LCOV -c -d . -o test.info
        $LCOV -a base.info -a test.info -o {{ item.target }}.info
        ./rel_{{ item.target }} -cos > /dev/null
        cat test.xml
        cat test.md
        cat test.json
        popd
    osx:
      build_script: |
        pushd test
        clang++ -o {{ item.target }} {{ item.cxx_args }} -std=c++{{ env.cpp_std }} -I../include $(echo -en *.cpp)
        popd
      test_script: |
        echo "./test/{{ item.target }}"
        ./test/{{ item.target }} -co
        ./test/{{ item.target }} -co --xml
        ./test/{{ item.target }} -co --md
        ./test/{{ item.target }} -co --json

pipeline:
  - stage(analysis):
      - tasks(ordered):
          - shell:
              script: |
                for f in $(find include/ -type f); do
                  diff -u <(cat $f) <($CFMT -style=file $f) || true
                done &> /tmp/format.diff
                if [ "$(wc -l /tmp/format.diff | cut -d' ' -f1)" -gt 0 ]; then
                  cat /tmp/format.diff
                  exit 1
                fi
              tags:
                - linux

  - stage(build):
      - tasks(ordered):
          - shell:
              script: |
                BUILD_DIR={{ model.variables.build_dir|render(env=env) }}
                {{ model.templates.linux.build_script|render(env=env, item=item) }}
              with: "{{ model.variables.linux }}"
              tags:
                - linux

          - shell:
              script: |
                {{ model.templates.osx.build_script|render(env=env, item=item) }}
              with: "{{ model.variables.osx }}"
              tags:
                - osx

  - stage(test):
      - tasks(ordered):
          - shell:
              script: |
                BUILD_DIR={{ model.variables.build_dir|render(env=env) }}
                {{ model.templates.linux.test_script|render(env=env, item=item) }}
              with: "{{ model.variables.linux }}"
              tags:
                - linux

          - shell:
              script: |
                {{ model.templates.osx.test_script|render(env=env, item=item) }}
              with: "{{ model.variables.osx }}"
              tags:
                - osx

  - stage(report):
      - tasks(ordered):
          - shell:
              script: |
                mkdir -p reports/{{ env.cpp_std }}
                pushd {{ model.variables.build_dir|render(env=env) }}
                echo -en "" > .targets
                {% for entry in model.variables.linux %}
                  echo -en ' -a {{ entry.target }}.info' >> .targets
                {% endfor %}
                $LCOV $(cat .targets) -o all.info
                $LCOV -e all.info "$(dirname $PWD)/include/*" -o ../reports/{{ env.cpp_std }}/lcov.info
                popd
              tags:
                - linux
